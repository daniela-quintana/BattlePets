{"ast":null,"code":"var _jsxFileName = \"/Users/osx/Box Sync/Laboratoria/Proyectos/BattlePets/src/app/components/BattleField.js\";\nimport React, { Component } from 'react';\nimport { Col } from 'react-bootstrap';\nimport Cell from \"./Cell\";\nimport StartButton from \"./StartButton\";\nexport default (props => {\n  let battleField = props.battleField,\n      hits = props.hits,\n      onCellClick = props.onCellClick,\n      onClick = props.onClick,\n      screenMode = props.screenMode;\n  return React.createElement(Col, {\n    lg: 5,\n    md: 6,\n    sm: 12,\n    xs: 12,\n    className: \"battleFieldPanel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, !battleField && React.createElement(\"table\", {\n    className: `emptyBattleField ${screenMode === 'tablet' && 'centered'}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    className: \"emptyBattleField\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(StartButton, {\n    onClick: () => onClick(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }))))), battleField && hits < 17 && React.createElement(\"table\", {\n    className: `battlefieldTable ${screenMode === 'tablet' && 'centered'}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, battleField.map((row, x) => {\n    return React.createElement(\"tr\", {\n      key: x,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, row.map((column, y) => {\n      return React.createElement(\"td\", {\n        key: y,\n        className: \"tableCell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Cell, {\n        onCellClick: () => onCellClick(x, y),\n        x: x,\n        y: y,\n        cellState: column,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }));\n    }));\n  }))), hits === 17 && React.createElement(\"table\", {\n    className: `emptyBattleField ${screenMode === 'tablet' && 'centered'}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Game over\"), React.createElement(StartButton, {\n    onClick: () => onClick(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })))))));\n});","map":{"version":3,"sources":["/Users/osx/Box Sync/Laboratoria/Proyectos/BattlePets/src/app/components/BattleField.js"],"names":["React","Component","Col","Cell","StartButton","props","battleField","hits","onCellClick","onClick","screenMode","map","row","x","column","y"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Col } from 'react-bootstrap';\nimport Cell from \"./Cell\";\nimport StartButton from \"./StartButton\";\n\nexport default (props) => {\n  let { battleField, hits, onCellClick, onClick, screenMode } = props;\n  return (\n    <Col lg={5} md={6} sm={12} xs={12} className='battleFieldPanel'>\n      {!battleField &&\n      <table className={`emptyBattleField ${screenMode === 'tablet' && 'centered'}`}>\n        <tbody>\n        <tr>\n          <td className='emptyBattleField'>\n            <StartButton onClick={() => onClick()}/>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n      }\n      {battleField && hits < 17 &&\n      <table className={`battlefieldTable ${screenMode === 'tablet' && 'centered'}`}>\n        <tbody>\n        {battleField.map((row, x) => {\n          return (\n            <tr key={x}>{row.map((column, y) => {\n              return (\n                <td\n                  key={y}\n                  className='tableCell'\n                >\n                  <Cell\n                    onCellClick={() => onCellClick(x, y)}\n                    x={x}\n                    y={y}\n                    cellState={column}\n                  />\n                </td>\n              )\n            })}</tr>\n          )\n        })}\n        </tbody>\n      </table>\n      }\n      {hits === 17 &&\n      <table className={`emptyBattleField ${screenMode === 'tablet' && 'centered'}`}>\n        <tbody>\n        <tr>\n          <td>\n            <div className='text-center'>\n              <h1>Game over</h1>\n              <StartButton onClick={() => onClick()}/>\n            </div>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n      }\n    </Col>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}